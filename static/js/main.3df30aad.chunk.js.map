{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","store/todos.ts","store/index.ts","store/loading.ts","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["SortType","todosReducer","todos","action","type","payload","rootReducer","combineReducers","currentTodo","loading","store","useSelector","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","onSetSelectedTodo","onSettingModal","className","map","todo","id","completed","title","onClick","TodoFilter","onSettingTodo","useState","query","setQuery","lowerQuery","toLowerCase","useEffect","filter","includes","onChange","target","value","All","Completed","Active","event","placeholder","style","pointerEvents","Loader","TodoModal","selectedTodo","selectedUser","onSelectTodo","onSettingSelectedUser","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","setTodos","todosToShow","setTodosToShow","setSelectedTodo","setSelectedUser","modal","setModal","userId","currentTodos","length","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3df30aad.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  onSettingTodo: React.Dispatch<React.SetStateAction<Todo[]>>,\n}\n\nenum SortType {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, onSettingTodo }) => {\n  const [query, setQuery] = useState('');\n  const lowerQuery = query.toLowerCase();\n\n  const getFilteredTodos = () => {\n    onSettingTodo(todos\n      .filter(todo => todo.title.toLowerCase()\n        .includes(lowerQuery)));\n  };\n\n  useEffect(() => getFilteredTodos(), [lowerQuery]);\n\n  const handleOnSelect = ({ target }: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (target.value) {\n      case (SortType.All):\n        onSettingTodo(todos);\n        break;\n\n      case (SortType.Completed):\n        onSettingTodo(todos.filter(todo => todo.completed));\n        break;\n\n      case (SortType.Active):\n        onSettingTodo(todos.filter(todo => !todo.completed));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleOnSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onSettingTodo(todos);\n              setQuery('');\n            }}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from '../types/Todo';\n\ntype TodosAction = {\n  type: 'setTodos',\n  payload: Todo[],\n};\n\nexport const todosReducer = (\n  todos: Todo[],\n  action: TodosAction,\n) => {\n  switch (action.type) {\n    case 'setTodos':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport const actions = {\n  setTodos: (todos: Todo[]): TodosAction => {\n    return {\n      type: 'setTodos',\n      payload: todos,\n    };\n  },\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { loadingReducer } from './loading';\nimport { todosReducer } from './todos';\n\nconst rootReducer = combineReducers({\n  todos: todosReducer,\n  currentTodo: todosReducer,\n  loading: loadingReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n","type ActionStart = {\n  type: 'start/loading',\n};\n\ntype ActionFinish = {\n  type: 'finish/loading'\n};\n\ntype ActionLoading = (ActionStart | ActionFinish);\n\nexport const loadingReducer = (loading = false, action: ActionLoading) => {\n  switch (action.type) {\n    case 'start/loading':\n      return true;\n    case 'finish/loading':\n      return false;\n    default:\n      return loading;\n  }\n};\n\nexport const actions = {\n  startLoading: (): ActionStart => {\n    return {\n      type: 'start/loading',\n    };\n  },\n  finishLoading: (): ActionFinish => {\n    return {\n      type: 'finish/loading',\n    };\n  },\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSetSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n  onSettingModal: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todos, onSetSelectedTodo, onSettingModal },\n) => (\n  <>\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                ? <i className=\"fas fa-check-square has-text-success\" />\n                : <i className=\"fas fa-exclamation-triangle has-text-danger\" />}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">{todo.title}</p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSetSelectedTodo(todo);\n                  onSettingModal(true);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n\n  </>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  selectedUser: User | null,\n  onSelectTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n  onSettingSelectedUser: Dispatch<SetStateAction<User | null>>,\n  onSettingModal: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  selectedUser,\n  onSelectTodo,\n  onSettingSelectedUser,\n  onSettingModal,\n}) => {\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n            <h2>Title</h2>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onSelectTodo(null);\n                onSettingSelectedUser(null);\n                onSettingModal(false);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n            {selectedUser && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${selectedUser.email}`}>\n                  {selectedUser.name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import './App.scss';\nimport { useEffect, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosToShow, setTodosToShow] = useState(todos);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [modal, setModal] = useState(false);\n\n  useEffect(() => {\n    getTodos().then((currentTodos) => {\n      setTodos(currentTodos);\n      setTodosToShow(currentTodos);\n    });\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setSelectedUser);\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"App\">\n      <h1>Redux list of todos</h1>\n      <>\n        <div className=\"section\">\n          <div className=\"container\">\n            <div className=\"box\">\n              <h1 className=\"title\">Todos:</h1>\n\n              <div className=\"block\">\n                <TodoFilter\n                  todos={todos}\n                  onSettingTodo={setTodosToShow}\n                />\n              </div>\n\n              <div className=\"block\">\n                {todos.length === 0\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={todosToShow}\n                      onSetSelectedTodo={setSelectedTodo}\n                      onSettingModal={setModal}\n                    />\n                  )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {modal && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            selectedUser={selectedUser}\n            onSelectTodo={setSelectedTodo}\n            onSettingSelectedUser={setSelectedUser}\n            onSettingModal={setModal}\n          />\n        )}\n      </>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}